export const softwareEngineerQuestions = {
  1:  { question: "Which software development model uses sprints?", answer: "Agile" },
  2:  { question: "Which model follows sequential phases?", answer: "Waterfall" },
  3:  { question: "Which process improves software quality continuously?", answer: "CMMI" },
  4:  { question: "Which methodology focuses on early delivery?", answer: "Scrum" },
  5:  { question: "Which diagram shows object relationships?", answer: "Class" },
  6:  { question: "Which diagram shows system behavior over time?", answer: "Sequence" },
  7:  { question: "Which activity identifies software requirements?", answer: "Analysis" },
  8:  { question: "Which software quality attribute measures reliability?", answer: "Availability" },
  9:  { question: "Which software quality attribute measures usability?", answer: "Learnability" },
  10: { question: "Which process ensures the software meets specifications?", answer: "Verification" },
  11: { question: "Which process ensures the software fulfills user needs?", answer: "Validation" },
  12: { question: "Which type of testing checks individual units?", answer: "Unit" },
  13: { question: "Which type of testing checks integrated components?", answer: "Integration" },
  14: { question: "Which type of testing checks system-wide behavior?", answer: "System" },
  15: { question: "Which type of testing simulates user behavior?", answer: "Acceptance" },
  16: { question: "Which model uses iterative refinement?", answer: "Spiral" },
  17: { question: "Which diagram represents software processes?", answer: "Activity" },
  18: { question: "Which diagram models system states?", answer: "State" },
  19: { question: "Which diagram shows use cases?", answer: "UseCase" },
  20: { question: "Which methodology uses pair programming?", answer: "XP" },
  21: { question: "Which principle reduces software complexity?", answer: "Modularity" },
  22: { question: "Which principle encourages minimal coupling?", answer: "Cohesion" },
  23: { question: "Which software metric measures complexity?", answer: "Cyclomatic" },
  24: { question: "Which software metric measures code coverage?", answer: "Coverage" },
  25: { question: "Which model emphasizes risk management?", answer: "Spiral" },
  26: { question: "Which methodology is lightweight and flexible?", answer: "Agile" },
  27: { question: "Which diagram shows class hierarchy?", answer: "Class" },
  28: { question: "Which diagram shows component dependencies?", answer: "Component" },
  29: { question: "Which tool manages software requirements?", answer: "Jira" },
  30: { question: "Which tool is used for continuous integration?", answer: "Jenkins" },
  31: { question: "Which tool performs automated testing?", answer: "Selenium" },
  32: { question: "Which model is called linear-sequential?", answer: "Waterfall" },
  33: { question: "Which quality attribute measures maintainability?", answer: "Modifiability" },
  34: { question: "Which quality attribute measures efficiency?", answer: "Performance" },
  35: { question: "Which process defines software standards?", answer: "Governance" },
  36: { question: "Which methodology emphasizes documentation?", answer: "Waterfall" },
  37: { question: "Which methodology emphasizes working software over documentation?", answer: "Agile" },
  38: { question: "Which diagram models object interactions?", answer: "Sequence" },
  39: { question: "Which diagram shows system components and their relations?", answer: "Component" },
  40: { question: "Which process involves requirement validation?", answer: "Analysis" },
  41: { question: "Which principle encourages reusable software?", answer: "Abstraction" },
  42: { question: "Which methodology uses stand-up meetings?", answer: "Scrum" },
  43: { question: "Which type of testing uses black-box methods?", answer: "Functional" },
  44: { question: "Which type of testing uses white-box methods?", answer: "Structural" },
  45: { question: "Which activity manages software defects?", answer: "Debugging" },
  46: { question: "Which activity tracks software changes?", answer: "Versioning" },
  47: { question: "Which principle favors small iterative releases?", answer: "Incremental" },
  48: { question: "Which process measures software reliability?", answer: "Testing" },
  49: { question: "Which process ensures software scalability?", answer: "Design" },
  50: { question: "Which diagram represents deployment architecture?", answer: "Deployment" }
};
